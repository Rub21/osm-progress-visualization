{
  "name": "osmium",
  "description": "Node.js bindings to Osmium",
  "url": "https://github.com/osmcode/node-osmium",
  "homepage": "http://osmcode.org/node-osmium",
  "author": {
    "name": "Dane Springmeyer",
    "email": "springmeyer"
  },
  "contributors": [
    {
      "name": "Jochen Topf",
      "email": "joto"
    }
  ],
  "version": "0.1.3",
  "main": "./lib/osmium.js",
  "bugs": {
    "url": "https://github.com/osmcode/node-osmium/issues",
    "email": "dane@mapbox.com"
  },
  "keywords": [
    "osmium",
    "osm",
    "pbf",
    "changeset"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/osmcode/node-osmium.git"
  },
  "binary": {
    "module_name": "osmium",
    "module_path": "./lib/binding/",
    "host": "https://mapbox-node-binary.s3.amazonaws.com",
    "remote_path": "./{module_name}/v{version}",
    "package_name": "{node_abi}-{platform}-{arch}.tar.gz"
  },
  "dependencies": {
    "node-pre-gyp": "~0.5.10"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "licenses": [
    {
      "type": "Boost"
    }
  ],
  "engines": {
    "node": ">= 0.6.13 < 0.11.0"
  },
  "scripts": {
    "install": "node-pre-gyp install --fallback-to-build",
    "test": "mocha -R spec"
  },
  "readme": "# node-osmium\n\nFast and flexible Javascript library for working with OpenStreetMap data.\n\nProvides a bindings to the [libosmium](https://github.com/osmcode/libosmium) C++ library.\n\n[![Build Status](https://secure.travis-ci.org/osmcode/node-osmium.png)](http://travis-ci.org/osmcode/node-osmium)\n\n# Depends\n\n - Node.js v0.10.x\n\n# Installing\n\nBy default, binaries are provided and no external depedencies or compile is needed.\n\nJust do:\n\n    npm install osmium\n\nWe currently provide binaries for 64 bit OS X and 64 bit Linux. Running `npm install` on other\nplatforms will fall back to a source compile (see `Developing` below for build details).\n\n# Usage\n\n## Get the bounds of an `.osm` file\n\n```js\nvar osmium = require('osmium');\nvar file = new osmium.File(\"test/data/winthrop.osm\");\nvar reader = new osmium.Reader(file);\nconsole.log(reader.header())\n{ generator: 'CGImap 0.2.0',\n  bounds: [ -120.2024, 48.4636, -120.1569, 48.4869 ] }\n```\n\n## Parse a `.pbf` file and create a node handler callback to count total nodes\n\n```js\nvar osmium = require('osmium');\nvar file = new osmium.File(\"test/data/winthrop.osm\");\nvar reader = new osmium.Reader(file);\nvar handler = new osmium.Handler();\nvar nodes = 0;\nhandler.on('node',function(node) {\n    ++nodes;\n});\nreader.apply(handler);\nconsole.log(nodes);\n1525\n```\n\n# Developing\n\nIf you wish to develop on `node-osmium` you can check out the code and then build like:\n\n    git clone https://github.com/osmcode/node-osmium.git\n    cd node-osmium\n    make\n    make test\n\n## Source build dependencies\n\n - Compiler that supports `-std=c++11` (>= clang++ 3.2 || >= g++ 4.8)\n - Boost >= 1.49 with development headers\n - OSM-Binary\n - Protocol buffers\n - zlib\n\nSet depedencies up on Ubuntu Precise (12.04) like:\n\n    sudo apt-add-repository --yes ppa:chris-lea/node.js\n    sudo apt-add-repository --yes ppa:mapnik/boost\n    sudo apt-add-repository --yes ppa:ubuntu-toolchain-r/test\n    sudo apt-get -y update\n    sudo apt-get -y install git gcc-4.7 g++-4.7 build-essential nodejs libboost-dev zlib1g-dev protobuf-compiler libprotobuf-lite7 libprotobuf-dev libexpat1-dev libsparsehash-dev\n    export CC=gcc-4.7\n    export CXX=g++-4.7\n    git clone https://github.com/scrosby/OSM-binary.git\n    cd OSM-binary/src\n    make && sudo make install\n\nSet depedencies up on OS X like:\n\n    git clone https://github.com/mapnik/mapnik-packaging.git\n    cd mapnik-packaging/osx\n    # open the settings and make `export CXX11=true`\n    export CXX11=true\n    source MacOSX.sh\n    ./scripts/download_deps.sh\n    ./scripts/build_google_sparsetable.sh\n    ./scripts/build_icu.sh\n    ./scripts/build_boost.sh\n    ./scripts/build_protobuf.sh\n    ./scripts/build_node.sh\n    ./scripts/build_osm-pbf.sh\n    # NOTE: in the same terminal then run the build commands\n    # Or from a different terminal re-run `source MacOSX.sh`\n",
  "readmeFilename": "README.md",
  "bundleDependencies": [
    "node-pre-gyp"
  ],
  "_id": "osmium@0.1.3",
  "_shasum": "4a722de989c93a47e296ac054bdee564f2ba20ec",
  "_from": "osmium@^0.1.3",
  "_resolved": "https://registry.npmjs.org/osmium/-/osmium-0.1.3.tgz"
}
